"""First migration of Database.

Revision ID: 1161162346c8
Revises: 
Create Date: 2025-03-25 12:56:26.621290

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1161162346c8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('skills')
    op.drop_table('user_info')
    op.drop_table('user_skill_recommendations')
    op.drop_table('chat_history')
    op.drop_table('employee_performance')
    op.drop_table('learning_transcripts')
    op.drop_table('employee_top_words')
    op.drop_table('employee_rolling_sentiment')
    op.drop_table('user_skill_recommendation')
    op.drop_table('user_performance')
    op.drop_table('learning_meetings')
    op.drop_table('employee_skills_recommendations')
    op.drop_table('meeting_transcripts')
    with op.batch_alter_table('meeting_participants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('left_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('meeting_participants_meeting_id_user_id_key', type_='unique')
        batch_op.drop_column('id')

    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('scheduled_start', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('scheduled_end', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('actual_start', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('actual_end', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('google_meet_link', sa.String(length=300), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('meetings_created_by_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['created_by'], ['id'])
        batch_op.drop_column('scheduled_at')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('last_name', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('email', sa.String(length=150), nullable=False))
        batch_op.add_column(sa.Column('password_hash', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('department_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('manager_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.create_unique_constraint(None, ['email'])
        batch_op.create_foreign_key(None, 'roles', ['role_id'], ['id'])
        batch_op.create_foreign_key(None, 'departments', ['department_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['manager_id'], ['id'])
        batch_op.drop_column('name')
        batch_op.drop_column('role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', postgresql.ENUM('HR', 'Employee', 'Manager', name='user_role'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('manager_id')
        batch_op.drop_column('department_id')
        batch_op.drop_column('role_id')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('email')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    with op.batch_alter_table('meetings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('scheduled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('meetings_created_by_fkey', 'users', ['created_by'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('created_by',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('google_meet_link')
        batch_op.drop_column('actual_end')
        batch_op.drop_column('actual_start')
        batch_op.drop_column('scheduled_end')
        batch_op.drop_column('scheduled_start')

    with op.batch_alter_table('meeting_participants', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
        batch_op.create_unique_constraint('meeting_participants_meeting_id_user_id_key', ['meeting_id', 'user_id'])
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('left_at')
        batch_op.drop_column('role')

    op.create_table('meeting_transcripts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('speaker_label', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('transcript', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('end_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meetings.id'], name='meeting_transcripts_meeting_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='meeting_transcripts_pkey')
    )
    op.create_table('employee_skills_recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('skill_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('development_suggestion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_performance.id'], name='employee_skills_recommendations_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='employee_skills_recommendations_pkey')
    )
    op.create_table('learning_meetings',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('learning_meetings_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='learning_meetings_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_performance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('performance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('performance_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], name='user_performance_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_performance_pkey')
    )
    op.create_table('user_skill_recommendation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recommended_skill', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('recommendation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_info.id'], name='user_skill_recommendation_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_skill_recommendation_pkey')
    )
    op.create_table('employee_rolling_sentiment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rolling_sentiment', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_performance.id'], name='employee_rolling_sentiment_employee_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employee_rolling_sentiment_pkey')
    )
    op.create_table('employee_top_words',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('word', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('frequency', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employee_performance.id'], name='employee_top_words_employee_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='employee_top_words_pkey')
    )
    op.create_table('learning_transcripts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('meeting_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('speaker_label', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('transcript', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('start_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('end_time', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['learning_meetings.id'], name='learning_transcripts_meeting_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='learning_transcripts_pkey')
    )
    op.create_table('employee_performance',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('meeting_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('sentiment_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('participation_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('clarity_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('responsiveness_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('final_performance_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('overall_meeting_sentiment', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('feedback', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='employee_performance_pkey')
    )
    op.create_table('chat_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('message_type', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='chat_history_pkey')
    )
    op.create_table('user_skill_recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('skill_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recommendation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_skill_recommendations_pkey')
    )
    op.create_table('user_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('department', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_info_pkey'),
    sa.UniqueConstraint('email', name='user_info_email_key')
    )
    op.create_table('skills',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('skill_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='skills_pkey'),
    sa.UniqueConstraint('skill_name', name='skills_skill_name_key')
    )
    # ### end Alembic commands ###
